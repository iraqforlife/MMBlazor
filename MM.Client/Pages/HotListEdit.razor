@page "/HotListEdit"
@inject HttpClient client
<h3>Hot List Settings</h3>

@if (hotList is null)
{
    <p>Loading...</p>
}
else
{
<EditForm Model="newHotListItem" OnValidSubmit="AddItem">
    <DataAnnotationsValidator />
    <button type="submit" class="btn btn-success">Add</button>
</EditForm>
<table class="table">
    <thead>
        <tr>
            <th>Symbol</th>
            <th>Description</th>
            <th>Image Link</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var hot in hotList)
        {
            <tr>
                <td>@hot.Symbol</td>
                <td>@hot.Description</td>
                <td><button class="btn btn-danger">Delete</button></td>
            </tr>

        }
    </tbody>
</table>
}



@code {
    Model.HotList[] hotList { get; set; }
    Model.HotList newHotListItem = new Model.HotList();
    bool displayAdd { get; set; } = false;
    Play play { get; set; }
    protected override async Task OnInitializedAsync()
    {
        hotList = await client.GetJsonAsync<Model.HotList[]>("https://localhost:44365/api/hotlist");
    }
    async Task AddItem()
    {
        await client.PostJsonAsync("https://localhost:44365/api/HotLists", newHotListItem);
    }
}
